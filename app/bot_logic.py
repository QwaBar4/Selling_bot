import logging
from datetime import datetime, timedelta
from telegram import Bot
from app import config, database as db, wireguard

logger = logging.getLogger(__name__)

async def grant_subscription(user_id: int, bot: Bot):
    """
    –í—ã–¥–∞–µ—Ç –ø–æ–¥–ø–∏—Å–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é: –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥,
    –¥–æ–±–∞–≤–ª—è–µ—Ç –ø–∏—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    logger.info(f"–ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –≤—ã–¥–∞—á–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
    await deactivate_user_temp_config(user_id, bot)
    
    try:
        client_ip = db.get_next_available_ip()
        if not client_ip:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–µ–ª–∏—Ç—å IP-–∞–¥—Ä–µ—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}.")
            await bot.send_message(config.ADMIN_TELEGRAM_ID, f"‚ÄºÔ∏è –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å IP-–∞–¥—Ä–µ—Å–∞! –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É {user_id}.")
            await bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–∂–µ —É–≤–µ–¥–æ–º–ª–µ–Ω.")
            return

        client_private_key, client_public_key = wireguard.generate_client_keys()
        if not client_private_key:
            await bot.send_message(config.ADMIN_TELEGRAM_ID, f"‚ÄºÔ∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–ª—é—á–∏ –¥–ª—è {user_id}.")
            return

        if wireguard.add_peer_to_server(client_public_key, client_ip):
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥ —Å –Ω–æ–≤—ã–º –ø–æ—Ä—Ç–æ–º
            config_text = wireguard.generate_wireguard_config(
                client_private_key, 
                client_ip, 
                port=config.WG_SERVER_PORT
            )
            db.update_user_subscription(user_id, config.SUBSCRIPTION_DAYS, config_text, client_ip)

            await bot.send_message(
                user_id,
                "‚úÖ –û–ø–ª–∞—Ç–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.\n\n"
                "–í–æ—Ç –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª. "
                "–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ WireGuard –Ω–∞ –≤–∞—à–µ–º —É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ."
            )
            await bot.send_document(
                user_id,
                document=bytes(config_text, 'utf-8'),
                filename=f"wg_{user_id}.conf"
            )
            logger.info(f"–ö–æ–Ω—Ñ–∏–≥ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}.")
        else:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–∏—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
            await bot.send_message(config.ADMIN_TELEGRAM_ID, f"‚ÄºÔ∏è –û—à–∏–±–∫–∞ WG: –Ω–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –ø–∏—Ä–∞ –¥–ª—è {user_id}.")
            await bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–≤–µ–¥–æ–º–ª–µ–Ω.")

    except Exception as e:
        logger.exception(f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –ø–æ–¥–ø–∏—Å–∫–∏ {user_id}: {e}")
        await bot.send_message(config.ADMIN_TELEGRAM_ID, f"‚ÄºÔ∏è –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –ø–æ–¥–ø–∏—Å–∫–∏ {user_id}: {e}")

async def grant_temp_config(user_id: int, bot: Bot):
    """
    –í—ã–¥–∞–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –Ω–∞ 10 –º–∏–Ω—É—Ç –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ Freekassa
    """
    logger.info(f"–í—ã–¥–∞—á–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –∞–∫—Ç–∏–≤–Ω—ã–π –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥
        existing_temp = db.get_temp_config(user_id)
        if existing_temp:
            expires_at = datetime.fromisoformat(existing_temp['expires_at'])
            if expires_at > datetime.now():
                remaining_minutes = int((expires_at - datetime.now()).total_seconds() / 60)
                await bot.send_message(
                    user_id,
                    f"‚è∞ –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥!\n"
                    f"–û—Å—Ç–∞–ª–æ—Å—å –≤—Ä–µ–º–µ–Ω–∏: {remaining_minutes} –º–∏–Ω.\n\n"
                    f"–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∞–π—Ç—É –æ–ø–ª–∞—Ç—ã."
                )
                await bot.send_document(
                    user_id,
                    document=bytes(existing_temp['config_text'], 'utf-8'),
                    filename=f"shallow{user_id}.conf"
                )
                return

        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–±–æ–¥–Ω—ã–π IP
        client_ip = db.get_next_available_ip()
        if not client_ip:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–¥–µ–ª–∏—Ç—å IP-–∞–¥—Ä–µ—Å –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ {user_id}.")
            await bot.send_message(user_id, "–í—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö IP-–∞–¥—Ä–µ—Å–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return

        # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á–∏
        client_private_key, client_public_key = wireguard.generate_client_keys()
        if not client_private_key:
            await bot.send_message(user_id, "–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª—é—á–µ–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
            return

        # –î–æ–±–∞–≤–ª—è–µ–º –ø–∏—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        if wireguard.add_peer_to_server(client_public_key, client_ip):
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥
            config_text = wireguard.generate_wireguard_config(
                client_private_key, 
                client_ip, 
                port=getattr(config, 'WG_SERVER_PORT', 51820)
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –≤ –ë–î
            db.add_temp_config(user_id, config_text, client_ip, client_public_key)

            await bot.send_message(
                user_id,
                "üïê –í—Ä–µ–º–µ–Ω–Ω—ã–π VPN-–∫–æ–Ω—Ñ–∏–≥ –≤—ã–¥–∞–Ω –Ω–∞ 10 –º–∏–Ω—É—Ç!\n\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∞–π—Ç—É –æ–ø–ª–∞—Ç—ã Freekassa.\n"
                "–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã —ç—Ç–æ—Ç –∫–æ–Ω—Ñ–∏–≥ –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω, "
                "–∞ –≤–∞–º –±—É–¥–µ—Ç –≤—ã–¥–∞–Ω –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥."
            )
            await bot.send_document(
                user_id,
                document=bytes(config_text, 'utf-8'),
                filename=f"temp_wg_{user_id}.conf"
            )
            logger.info(f"–í—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –≤—ã–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} —Å IP {client_ip}.")
        else:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–∏—Ä–∞ –¥–ª—è {user_id}")
            await bot.send_message(user_id, "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–¥–∞—á–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ñ–∏–≥–∞ {user_id}: {e}")
        await bot.send_message(user_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

async def deactivate_user_temp_config(user_id: int, bot: Bot):
    """
    –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    temp_config = db.get_temp_config(user_id)
    if temp_config and temp_config['is_active']:
        # –£–¥–∞–ª—è–µ–º –ø–∏—Ä–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞
        if wireguard.remove_peer_from_server(temp_config['public_key']):
            db.deactivate_temp_config(user_id)
            logger.info(f"–í—Ä–µ–º–µ–Ω–Ω—ã–π –∫–æ–Ω—Ñ–∏–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")
            
            try:
                await bot.send_message(
                    user_id,
                    "üîÑ –í–∞—à –≤—Ä–µ–º–µ–Ω–Ω—ã–π VPN-–∫–æ–Ω—Ñ–∏–≥ –æ—Ç–∫–ª—é—á–µ–Ω, —Ç–∞–∫ –∫–∞–∫ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É."
                )
            except:
                pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è

async def cleanup_expired_configs(bot: Bot):
    """
    –û—á–∏—â–∞–µ—Ç –∏—Å—Ç–µ–∫—à–∏–µ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥–∏
    """
    expired_keys = db.cleanup_expired_temp_configs()
    for public_key in expired_keys:
        wireguard.remove_peer_from_server(public_key)
    
    if expired_keys:
        logger.info(f"–û—á–∏—â–µ–Ω–æ {len(expired_keys)} –∏—Å—Ç–µ–∫—à–∏—Ö –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –∫–æ–Ω—Ñ–∏–≥–æ–≤.")
